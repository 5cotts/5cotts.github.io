{
    "name": "Scott Schmidt",
    "title": "Software Engineer",
    "email": "s@scottschmidt.io",
    "website": "https://scottschmidt.io",
    "technicalCompetencies": [
        {
            "skill": "CI/CD",
            "examples": ["CircleCI", "GitHub Actions"]
        },
        {
            "skill": "Cloud",
            "examples": ["AWS"]
        },
        {
            "skill": "Containers",
            "examples": ["Docker"]
        },
        {
            "skill": "Data Stores",
            "examples": ["CSV", "ElasticSearch", "JSON", "Parquet", "PostgreSQL", "Redis"]
        },
        {
            "skill": "Frameworks",
            "examples": ["Django", "Flask", "Jekyll", "React"]
        },
        {
            "skill": "Languages",
            "examples": ["Bash", "CSS", "HTML", "JavaScript", "Python", "R", "SQL"]
        }
    ],
    "workExperience": [
        {
            "companyName": "The Recurse Center",
            "companyUrl": "https://www.recurse.com/",
            "companyBlurb": "The Recurse Center is a full-time educational retreat for programmers who want to become dramatically better with a community of peers doing the same.",
            "positions": [
                {
                    "title": "Participant",
                    "startDate": "Feb. 2022",
                    "endDate": "May 2022",
                    "blurb": "",
                    "bulletPoints": [
                        "With an Arduino, created a device that plugs into a car to read the communication protocol messages between ECUs. Reverse engineered various open source C++ libraries to parse and log messages to serial output. Iterating on further software written with pySerial to download this data for analysis and then send messages back to a car, allowing for control of ECUs.",
                        "Expanded my knowledge of data structures and algorithms by pair programming on 160+ LeetCode problems with other participants. Analyzed and discussed the time/space complexity of our algorithms after each problem.",
                        "Participated in fixing a time zone bug on the Recurse Center's presentations application. Used the opportunity to solve the bug in a group and discuss best practices for becoming familiar with a new codebase, reproducing the bug locally, testing a fix, opening a pull request, and leaving proper documentation for future maintainers."
                    ]
                }
            ]

        },
        {
            "companyName": "WireScreen",
            "companyUrl": "https://wirescreen.ai/",
            "companyBlurb": "WireScreen collects and analyzes data on millions of Chinese businesses to create products which allow users to conduct due diligence, de-risk their supply chains, search for potential business partners, and more.",
            "positions": [
                {
                    "title": "Engineering Team Lead",
                    "startDate": "Jan. 2020",
                    "endDate": "Dec. 2021",
                    "blurb": "Working directly under the CTO, I helped lead a small group of engineers. In addition to writing code, I also conducted code reviews, architected new services/features, and acted as liaison between engineering and product teams to help translate business needs into engineering outcomes.",
                    "bulletPoints": [
                        "Created and administered infrastructure on AWS for data pipelines, web scrapers, and web apps. Used services such as DMS, EC2, ECR, ECS, ElastiCache, ElasticSearch, RDS, and S3.",
                        "Built CI/CD pipeline for engineers using GitHub Actions, cutting deployment time from 20 to <10 minutes. Utilized Docker for containerization.",
                        "Using Flask, uWSGI, and Jinja, built and managed internal web apps. These apps supported tasks such as submitting/editing data for the end-user product or orchestrating web scrapers, which saved the product team time by allowing them to contribute directly to the product.",
                        "Built and managed micro-services for internal use by engineers. One such service translated Chinese strings into English using an in-house Postgres data store. Used Flask JSON-RPC to expose an API layer and Celery as a task queue.",
                        "Added new front-end designs and API endpoints to the end-user product, a Django web app built with Python and React.js, which let users explore the connections between corporate entities and individuals.",
                        "Worked with product teams to provide technical input on features proposed by users. Conducted exploratory data analysis using Jupyter to determine feasibility of features and provided reports."
                    ]
                },
                {
                    "title": "Software Engineer",
                    "startDate": "Feb. 2019",
                    "endDate": "Jan. 2020",
                    "blurb": "This was a multi-faceted full stack position where I worked across both research and engineering functions to help build the product using an Agile method of development. With a small team, we built an alpha prototype which led to a seed investment by a venture capital firm.",
                    "bulletPoints": [
                        "Built web scrapers in Python using various tools such as Selenium, BeautifulSoup, and Requests to retrieve data from multiple sources. Scaled scrapers to complete XX thousand tasks per day.",
                        "Wrote Python scripts to support an ETL pipeline that processed scraped data for use with an end-user product. Consistently iterated to significantly decrease run time and save on compute costs by utilizing tools like Python's Multiprocessing library to run parallel processes.",
                        "Wrote back-end Python code to integrate a front-end created by an design firm with a Postgres database to create a prototype end-user product, which led to an investment by {\"text\": \"Sequoia Capital\", \"link\": \"https://www.sequoiacap.com/companies/the-wire-digital/\", \"style\": \"link\"}.",
                        "Using the JavaScript library pdfmake, worked with a designer to refactor a front-end data download feature which generated PDFs on click using data from SQL queries."
                    ]
                }
            ]
        }
    ],
    "education": [
        {
            "eduName": "Economics & Business Administration",
            "eduLevel": "Bachelor's Degree",
            "eduInstitution": "Northeastern University",
            "eduUrl": "https://www.northeastern.edu/",
            "startDate": "Sept. 2013",
            "endDate": "Dec. 2018"
        }
    ]
}
